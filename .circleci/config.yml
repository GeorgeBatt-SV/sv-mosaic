version: 2.1

commands:
  load_build:
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.14
      - run:
          name: Load Mosaic image
          command: docker load -i sv_mosaic_build.tar

jobs:
  build:
    docker:
      - image: cimg/base:2021.04
        name: build
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.14
      - run:
          name: Build Mosaic image
          command: DOCKER_BUILDKIT=1 docker build -t "sv-mosaic" .
      - run:
          name: Save Mosaic image
          command: docker save -o sv_mosaic_build.tar sv-mosaic
      - persist_to_workspace:
          root: ~/project
          paths:
            - sv_mosaic_build.tar
            - scripts
  unit_tests:
    docker:
      - image: cimg/base:2021.04
    resource_class: large
    steps:
      - checkout
      - load_build
      - run:
          name: Spin up sub-container
          command: |
            docker container create -t --name sv-mosaic sv-mosaic
            docker container start sv-mosaic
      - run:
          name: Run tests
          command: docker exec sv-mosaic yarn test:ci
      # This exports reports to CircleCI, but doesn't seem to really
      # be worth doing at the moment
      # - run:
      #     name: Extract reports
      #     command: docker cp sv-mosaic:/app/reports ~/reports
      # - store_test_results:
      #     path: ~/reports
  e2e_tests:
    docker:
      - image: cimg/base:2021.04
    resource_class: large
    steps:
      - checkout
      - load_build
      - run:
          name: Spin up test containers
          command: cd automation_testing && docker-compose up --detach
      - run:
          name: Copy tests to container
          command: |
            docker cp ./automation_testing sv-mosaic-e2e:/app/automation_testing
            docker exec sv-mosaic-e2e chmod +x automation_testing/scripts/try-storybook
            docker exec sv-mosaic-e2e mkdir /app/src
            docker cp ./src/theme sv-mosaic-e2e:/app/src/theme
      - run:
          name: List dir
          command: docker exec sv-mosaic-e2e ls -la ./automation_testing
      - run:
          name: Run tests
          command: docker exec sv-mosaic-e2e ./automation_testing/scripts/try-storybook
  build_storybook_5:
    docker:
      - image: cimg/base:2021.04
    resource_class: large
    steps:
      - checkout
      - load_build
      - run:
          name: Build Storybook 7 image
          command: DOCKER_BUILDKIT=1 docker build -t "sv-mosaic-sb7" ./containers/mosaic-sb7
      - run:
          name: Compose containers
          command: docker-compose up --detach
      - run:
          name: Build Storybook distribution files
          command: docker exec -t sv-mosaic yarn run build:storybook
      - run:
          name: Extract distribution files
          command: docker cp sv-mosaic:/app/docs ./docs
      - run:
          name: List distribution files
          command: ls ./docs
      - persist_to_workspace:
          root: ~/project
          paths:
            - docs
  publish_to_github_pages:
    docker:
      - image: cimg/base:2021.04
    resource_class: large
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: ~/project
      - add_ssh_keys:
          fingerprints:
            - 90:c4:82:92:d0:82:28:9d:f4:c9:d0:25:27:1e:07:50
      - run:
          name: Build Github publishing image
          command: DOCKER_BUILDKIT=1 docker build -t "github-pages" ./containers/github-pages
      - run:
          name: Spin up publishing container
          command: docker run --name github-pages -e CIRCLE_BRANCH=${CIRCLE_BRANCH} -t -d github-pages
      - run:
          name: Copy SSH
          command: |
            # Copy base container's .ssh to publishing container's .ssh
            docker cp ~/.ssh github-pages:/root/.ssh
            # Give ~/.ssh and the keys inside the correct ownership and permissions
            docker exec -t github-pages sh -c "chmod 700 ~/.ssh && chmod 600 ~/.ssh/* && chown -R root:root ~/.ssh"
            # Replace the base container's home path with the publishing container's home path in the .ssh/config file
            docker exec -t github-pages sh -c "sed -i 's#/home/circleci#/root#g' /root/.ssh/config"
      - run:
          name: Copy docs
          command: mkdir docs && docker cp docs/. github-pages:/app/docs
      - run:
          name: Publish to GitHub pages
          command: docker exec -t github-pages sh -c "ls /app"
  publish:
    docker:
      - image: cimg/base:2021.04
    resource_class: large
    steps:
      - checkout
      - load_build
      - run:
          name: Spin up publishing container
          command: docker run --name sv-mosaic -e CIRCLE_BRANCH=${CIRCLE_BRANCH} -e CIRCLE_SHA1=${CIRCLE_SHA1} -e NODE_OPTIONS=--openssl-legacy-provider -e NPM_TOKEN=${NPM_TOKEN} -t -d sv-mosaic
      - run:
          name: Publish to NPM
          command: docker exec -t sv-mosaic yarn run ci:publish

workflows:
  build:
    jobs:
      # Everything needs a build
      - build:
          context: default
          filters:
            branches:
              only:
                - ci-testing
                # - storybook-upgrade
                - /pull.*/
                - develop
                - qa
                - staging
                - master
      # Pull request branches and the develop branch have tests run for them
      - unit_tests:
          context: default
          requires:
            - build
          filters:
            branches:
              only:
                - ci-testing
                - /pull.*/
                - develop
                - qa
      - e2e_tests:
          context: default
          requires:
            - build
          filters:
            branches:
              only:
                - ci-testing
                - /pull.*/
                - develop
                - qa
      # Branches develop, qa, staging and master get published to GH pages.
      # For the develop branch, the tests must finish successfully before publishing
      - build_storybook_5:
          context: default
          requires:
            - build
            - unit_tests
            - e2e_tests
          filters:
            branches:
              only:
                # - storybook-upgrade
                - ci-testing
                - develop
                - qa
                - staging
                - master
      - publish_to_github_pages:
          context: default
          # requires:
            # - build
            # - build_storybook_5
            # - unit_tests
            # - e2e_tests
          filters:
            branches:
              only:
                - storybook-upgrade
                - ci-testing
                - develop
                - qa
                - staging
                - master
      # Branches qa, staging and master get published to NPM.
      # The build must have successfully been published to GH pages before
      # being published to NPM
      - publish:
          context: default
          requires:
            - build
            - build_storybook_5
          filters:
            branches:
              only:
                - ci-testing
                - staging
                - master
